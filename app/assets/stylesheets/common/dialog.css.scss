@import "../variables/mixins";
@import "../variables/colors";
@import "../variables/sizes";
@import 'cdb-utilities/mixins';
@import 'cdb-variables/colors';
@import 'cdb-variables/sizes';


$sSmallWidth: 670px;

/* set by base dialog */
body.is-inDialog {
  overflow: hidden;
}
.Dialog {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(white,1);
  background: -moz-linear-gradient(top, rgba(white,1) 0%, rgba(white,0.95) 50%, rgba(white,0.9) 100%);
  background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(white,1)), color-stop(50%, rgba(white,0.95)), color-stop(100%, rgba(white,0.9)));
  background: -webkit-linear-gradient(top, rgba(white,1) 0%, rgba(white,0.95) 50%, rgba(white,0.9) 100%);
  background: -o-linear-gradient(top, rgba(white,1) 0%, rgba(white,0.95) 50%, rgba(white,0.9) 100%);
  background: -ms-linear-gradient(top, rgba(white,1) 0%, rgba(white,0.95) 50%, rgba(white,0.9) 100%);
  background: linear-gradient(to bottom, rgba(white,1) 0%, rgba(white,0.95) 50%, rgba(white,0.9) 100%);
  z-index: 1000;
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ffffff', GradientType=1 );
}
.Dialog-contentWrapper { // this is necessary since the Dialog element might have `position: block` set by .hide/.show
  @include display-flex();
  @include flex-direction(column);
  @include align-items(center);
  @include justify-content(center);
  width: 100%;
  height: 100%;
}
/* If the animation duration is changed make sure to update the timeout value in Dialog's view! */
.Dialog.is-opening {
  @include animation(fade-and-scale-in 100ms ease-out);
}
.Dialog.is-closing {
  /* "forwards" to keep the last keyframe's styles after animation ended */
  @include animation(fade-and-scale-out 80ms ease-in forwards);
}
.Dialog.is-sticky .Dialog-closeBtn {
  display: none;
}
.Dialog-closeBtn {
  position: fixed;
  top: $sMargin-group; // to be aligned with header icon
  right: $sMargin-section;
}
.Dialog-backBtn {
  position: fixed;
  top: $sMargin-group; // to be aligned with header icon
  left: $sMargin-section;
}
.Dialog-content {
  width: 100%;
}
.Dialog-content--expanded {
  @include display-flex();
  @include flex-direction(column);
  @include justify-content(space-around, stretch);
  @include align-items(stretch, stretch);
  height: 100%;
  width: 100%;
}
.Dialog-header--expanded { @include flex-grow(1) }
.Dialog-body--expanded {
  @include flex-grow(100);
  // Forcing to get 80% of height
  // if not IE10 will not show
  // scrollbar in higher content
  -ms-flex: 100 0 80%;
  background-color: $cStructure-grayBkg;
}
.Dialog-footer--expanded {
  width: 100%;
  position: fixed;
  bottom: 0;
}
.Dialog-content.is-newContent {
  @include animation(fade-and-scale-in 100ms ease-out);
}
.Dialog-header {
  text-align: center;
  padding: $sMargin-group 0;
}
.Dialog-body {
  padding-top: $sMargin-group;
  padding-bottom: $sMargin-group;
  border-top: 1px solid $cStructure-mainLine;
  width: $sLayout-width;
  margin: 0 auto;
}
.Dialog-body.Dialog-body--tall {
  padding-top: $sMargin-section;
  padding-bottom: $sMargin-section;
}
.Dialog-body.Dialog-body--noPaddingTop { padding-top: 0 }
.Dialog-body.Dialog-body--withoutBorder { border-top: none }
.Dialog-body.Dialog-body--create {
  position: relative;
  width: 100%;
  overflow: auto;
}
.Dialog-body.Dialog-body--share {
  @include display-flex();
  @include align-items(center);
  @include flex-direction(column);
  padding-top: 0px;
  & .u-inner { width: 620px }
}
.Dialog-body.Dialog-body--small { width: $sSmallWidth }
.Dialog-Stretcher {
  width: $sLayout-width;
  @include display-flex();
  @include justify-content(center);
}
.Dialog-Stretcher--small {
  width: 700px;
}
.Dialog-Stretcher--medium {
  width: 830px;
}
.Filters.Dialog-bodyFilters {
  position: relative;
  background: none;
}
.Filters.Dialog-bodyFilters {
  position: relative;
  background: none;
}
.Dialog-body .ListingContent {
  margin-bottom: 100px;
}
.Dialog-footer {
  padding: $sMargin-group 0;
  text-align: center;
}
.Dialog-footer--withoutBorder { border-top: none }
.Dialog-footer--simple {
  @include display-flex();
  @include justify-content(center);
}
.Dialog-footer--small {
  width: $sSmallWidth;
}
.Dialog-footerContent {
  @include display-flex();
  @include justify-content(center);
}
.Dialog-preFooter {
  position: fixed;
  bottom: 100px; // to be located on top of the .Dialog-footer
  left: 0;
  background: $cStructure-grayBkg;
  z-index: 3;
  // Make the item not go all the way to the edge, since that would cover the scrollbarâ€¦
  // Make margins on both sides to accomodate this
  left: 5%;
  right: 5%;
  width: 90%;

  // same as .CreateDialog-footerShadow but using :before to not have to add more markup
  &:before {
    content: '';
    position: absolute;
    top: -18px;
    display: block;
    width: 100%;
    height: 18px;
    @include background-gradient(rgba(#F9F9F9, 0), rgba(#F9F9F9, 1));
    z-index: 2;
  }
}
.Dialog-headerIcon {
  position: relative;
  width: $sIcon-layout;
  height: $sIcon-layout;
  border: 1px solid $cStructure-softLine;
  border-radius: $sIcon-borderRadius;
  margin-left: auto; // auto to center it in the container
  margin-right: auto;
  margin-bottom: $sMargin-elementInline;
  font-size: 22px;
  line-height: 44px;
}
.Dialog-headerIcon--neutral {
  // TODO: !important to not be overrided by .CreateDialog-headerIcon overriding stuff over here :(
  border-color: $cIcons-active !important;
  .CDB-IconFont {
    color: $cIcons-active !important;
  }
}
.Dialog-headerIcon--twitter {
  border-color: #55ACEE;
  color: #55ACEE;
}
.Dialog-headerIcon--negative {
  color: $cError;
  border-color: $cError;
}
.Dialog-headerIcon--positive {
  color: $cHighlight-positive;
  border-color: $cHighlight-positive;
}
.Dialog-headerIcon--alert {
  color: $cHighlight-alert2;
  border-color: $cHighlight-alert2;
}
.Dialog-headerIcon--small {
  font-size: 10px;
  vertical-align: middle;
  position: relative;
  top: -3px;
}
.Dialog-headerIconBadge {
  /* "backwards" to use the first keyframe's styles before animation starts */
  @include animation(fade-and-bounce-up 0.6s 350ms ease-in-out backwards);
}
.Dialog-headerTitle {
  line-height: $sLineHeight-larger;
  font-size: $sFontSize-larger;
  font-weight: $sFontWeight-normal;
  color: $cTypography-paragraphs;
}
.Dialog-headerTitle--warning {
  color: $cHighlight-alert2;
}
.Dialog-headerTitle--error { color: $cHighlight-negative }
.Dialog-headerText {
  font-size: $sFontSize-large;
  line-height: $sLineHeight-large;
  font-weight: $sFontWeight-lighter;
  color: $cTypography-paragraphs;
}
.Dialog-headerText:not(:last-child) { margin-bottom: $sMargin-elementInline }
.Dialog-headerText--centered { margin: auto }
.Dialog-headerText--ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.Dialog-headerText--small {
  width: $sSmallWidth;
}
.Dialog-footerBtn {
  margin-right: $sMargin-element;
}
.Dialog-affectedEntities {
  @include display-flex();
  @include justify-content(space-between, justify);
  @include align-items(center);
}

// Styles related to expanded styles, where body--expanded is intended to be scrollable
$sStickyHeight: 97px;

.Dialog-content--expanded {
  @include display-flex();
  @include flex-direction(column);
  @include justify-content(space-around, stretch);
  @include align-items(stretch, stretch);
  height: 100%;
  width: 100%;
}
.Dialog-header--expanded {
  @include flex-grow(1);
  min-height: 100px; // required to have its content visible, actual height is more like 17Xpx
}
.Dialog-expandedSubContent {
  @include flex-grow(100);
  border: 1px solid $cStructure-mainLine;
  background-color: $cStructure-grayBkg;
  overflow-y: auto;
  overflow-x: hidden;
}
.Dialog-expandedSubContentInner {
  position: relative; // necessary to position subHeader properly
}
// These additional paddings are required to be applied on an inner element, for the paddings to apply in FF
// See http://stackoverflow.com/questions/26888428/display-flex-loses-right-padding-when-overflowing for an isolated explanation
.Dialog-bodyInnerExpandedWithSubFooter { padding-bottom: $sStickyHeight }
.Dialog-bodyInnerExpandedWithPreFooter { padding-bottom: $sStickyHeight + 100px }

.Dialog-stickyFooter {
  position: fixed;
  bottom: 0;
  width: 100%;
  height: $sStickyHeight;
}
.Dialog-contentSubHeader {
  @include display-flex();
  @include justify-content(space-between, justify);
  @include align-items(center, center);
  width: 100%;
  padding-top: $sMargin-group;
  padding-bottom: $sMargin-group;
  border-bottom: 1px solid $cStructure-mainLine;
}

// Results body, used for modals with additional "step" info (e.g. georeference results, help dialogs)
$sNarrower-width: 620px;
.Dialog-resultsBody {
  @include display-flex();
  @include justify-content(flex-start, justify);
  @include align-items(flex-start, justify);
  width: $sNarrower-width;
}
.Dialog-resultsBody--vcenter { @include align-items(center, center) }
.Dialog-resultsBodyIcon { margin-right: $sMargin-element }
.Dialog-resultsBodyTexts {
  @include display-flex();
  @include flex-direction(column);
  @include justify-content(flex-start, justify);
  @include align-items(flex-start, justify);
  width: 520px;
}
.Dialog-narrowerContent { width: $sNarrower-width }
.Dialog-countryBack {
  float: right;
  margin-left: 12px;
  pointer-events: auto;
}
@include keyframes(fade-and-scale-in) {
  0% {
    @include opacity(0.0);
    @include transform(scale(2.0));
  }
  10% {
    @include opacity(0.9);
    @include transform(scale(1.1));
  }
  100% {
    @include opacity(1.0);
    @include transform(scale(1.0));
  }
}

@include keyframes(fade-and-bounce-up) {
  0% {
    @include opacity(0.0);
    @include transform(translateY(6px));
  }
  15% {
    @include opacity(0.8);
    @include transform(translateY(-3px));
  }
  45% {
    @include opacity(1.0);
    @include transform(translateY(2px));
  }
  70% {
    @include transform(translateY(-1px));
  }
  100% {
    @include opacity(1.0);
    @include transform(translateY(0));
  }
}

@include keyframes(fade-and-scale-out) {
  0% {
    @include opacity(1.0);
    @include transform(scale(1.0));
  }
  80% {
    @include opacity(0.05);
    @include transform(scale(1.40));
  }
  100% {
    @include opacity(0.0);
    @include transform(scale(2.0));
  }
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /* IE10+ CSS styles go here */
  .Dialog-body .ListingContent {
    margin-bottom: 200px;
  }
}




@import 'cdb-utilities/mixins';
@import 'cdb-variables/colors';
@import 'cdb-variables/sizes';


/* WIP*/
.Dialog.is-white {
  background: $cWhite;
}

.Filters-typeItem {
  @include display-flex(); /* todo when create new layout */
}
.DatasetsList-itemMeta {
  @include align-items(baseline); /* todo when create new layout */
}

.Modal-header {
  padding-bottom: 0;
}

.Modal-body {
  padding-top: 24px;
}

.Modal-body-inner {
  width: 944px;
  margin: 0 auto;
}

.Modal-body-header {
  margin-bottom: 16px;
}

.Modal-analysisContainer {
  margin-bottom: 48px;
}
.Modal-analysisContainer:last-child {
  margin-bottom: 120px;
}

.Modal-actions {
  @include display-flex();
  @include justify-content(center);
  @include align-items(center);
  width: 80%;
  max-width: 640px;
  margin: $baseSize * 4 auto 0;
  padding: $baseSize * 4 0 0;
  border-top: 1px solid $cMainLine;

  &.is-narrow {
    margin: 0 auto;
  }
}

.Modal-actions-button {
  margin-right: 20px;

  &:last-child {
    margin-right: 0;
  }
}

.ModalBlockList-item-header {
  @include display-flex();
  @include justify-content(space-between);
  @include align-items(center);
}

.ModalBlockList-item-headerTitle {
  @include flex(1);
}
.ModalBlockList-item-headerSubTitle {
  width: 100px; /* fix naming depending the rest of designs */
}

.ModalBlockList {
  @include display-flex();
  @include flex-wrap(wrap);
  padding: 0 4px;
  box-sizing: border-box;
}

.ModalBlockList-item {
  @include display-flex();
  width: 304px;
  min-width: 304px;
  margin: 0 4px 8px;
  padding: 16px;
  border: 1px solid $cWhite;
  border-radius: 4px;
  background: $cWhite;
  box-sizing: border-box;
  cursor: pointer;
}

.ModalBlockList-itemInput {
  margin-right: $baseSize;
}

.ModalBlockList-item:hover {
  @include transition(border, 200ms, ease-in);
  border: 1px solid $cHoverLine;
}

.ModalBlockList-item--full {
  @include align-items(inherit);
  width: 100%;
  min-width: 100%;
  margin: 16px 0 0;
}

.ModalBlockList-item.is-selected {
  border: 1px solid rgba($cBlue, 0.48);
}
.ModalBlockList-item.is-disabled {
  border: 1px solid transparent;
  background: transparent;
  cursor: auto;
  opacity: 0.5;
}

.ModalBlockList-item-body {
  @include display-flex();
}
.ModalBlockList-item-media {
  width: 40px;
  min-width: 40px;
  height: 40px;
  border-radius: 2px;
  background: rgba($cBlue, 0.08);
}


.Form-row {
  @include align-items(center);
}

/* Add Layer Modal */
.ModalDataset-itemInfo {
  @include display-flex();
  @include align-items(center);
  @include flex(1);
  @include justify-content(space-between);
  width: 100%;
  max-width: 850px;
}

.ModalDataset-itemInfoTitle {
  max-width: 50%;
  padding-right: 24px;
  box-sizing: border-box;
}

.Carousel-Navigation.is-disabled {
  opacity: 0.24;
}

.Upgrade-info {
  @include display-flex();
  @include align-items(center);
  @include justify-content(space-between);
  padding: 20px;
  border-top: 1px solid rgba($cBlue, 0.32);
  background: rgba($cBlue, 0.08);
}

.Upgrade-infoActions {
  @include display-flex();
  @include align-items(center);
}

.AddLayer-tabs {
  display: block;
  width: 780px;
  padding: 28px 0;
  overflow-x: hidden;
}

.ConnectDataset-header {
  padding: 28px 0 16px;
}

.DatasetsList-avatarImg {
  width: $baseSize * 2;
  height: $baseSize * 2;
  border-radius: 2px;
}

.Editor-navButtons {
  @include display-flex();
  @include justify-content(center);
  margin: $baseSize * 4 0;
}
.Editor-navButtonsItem {
  margin-right: $baseSize;
}
.Editor-navButtonsItem:last-child {
  margin-right: 0;
}

.Editor-navButtonsItemLink {
  @include align-items(center);
  min-width: 136px;
  padding: 10px;
  border: 1px solid $cSecondaryLine;
  border-radius: $halfBaseSize;
  color: $cSecondaryText;
  text-align: left;
  box-sizing: border-box;
  cursor: pointer;
}

.Editor-navButtonsItemLink:hover {
  border: 1px solid rgba($cHoverLine, 0.4);
}

.Editor-navButtonsItem.is-selected .Editor-navButtonsItemLink {
  border: 1px solid $cBlue;
  background: $cWhite;
  color: $cMainBg;
  box-shadow: 1px 0 0 $cBlue, -1px 0 0 $cBlue, 0 1px 0 $cBlue, 0 -1px 0 $cBlue;
}

.Modal-containerList {
  width: 528px;
  margin: 0 auto;
}

.Publish-modal {
  @include display-flex();
  @include flex-direction(column);
  width: 100%;
  height: 100%;
}

.Publish-modalHeader {
  @include flex(0 0 auto);
  padding: $baseSize * 3 0;
}

.Publish-modalBody {
  @include display-flex();
  @include flex(1);
  @include flex-direction(column);
  position: relative;
  padding-bottom: 100px;
  overflow: hidden;
}

.Publish-modalBody.is-simple,
.Publish-modalFooter,
.Publish-modalContent {
  background-color: $cThirdBackground;
}

.Publish-modalShadow {
  width: 100%;
  background-color: $cWhite;
}

.Publish-modalMenu,
.Publish-modalShadow {
  position: relative;
  // In orden to change border by shadow, uncomment this
  // min-height: 5px; // to be able to show the shadow if no content inside.
  // box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
  border-bottom: 1px solid $cMainLine;
  z-index: 1;
}

.Publish-modalShare {
  @include display-flex();
  @include flex-direction(column);
  @include flex-grow(1);
  @include justify-content(center);
  @include align-items(center);
}

.Publish-modalButton {
  height: 24px;
}

.CDB-NavSubmenu-item.is-selected .Publish-modalLink {
  border-color: $cMainText;
}

.Upgrade-icon {
  padding: $baseSize;
  border-radius: $halfBaseSize;
  background-color: $cWhite;
}

.Upgrade-body {
  text-align: left;
}


/* REVAMP MODALS */

.Modal-listActions {
  margin-top: $baseSize * 4;
}

.Modal-listActionsitem,
.Modal-icon {
  margin-right: $baseSize * 2;
}

.Modal-listActionsitem:last-child {
  margin-right: 0;
}

.Modal-icon {
  margin-top: 6px;
  line-height: 34px; /* align-items: baseline doesnt work correctly in ff */
}

.Modal-listTextItem {
  margin-top: 32px;
}

.Modal-listTextHighlight {
  display: inline-block;
  padding: 4px 5px;
  border-radius: 2px;
  background: $cThirdBackground;
}

.Modal-listTextHighlight.is-code {
  font: 500 12px 'Monaco', 'Monospace';
}

.Modal-listForm {
  margin-left: 24px;
}

.Modal-listFormItem {
  margin-right: 32px;
}
.Modal-listFormItem.is-disabled {
  color: $cHintText;
}


.Modal-listFormItem:last-child {
  margin-right: 0;
}

.Modal-addItem {
  width: 40px;
  height: 40px;
  border: 1px solid $cMainLine;
  border-radius: $halfBaseSize;
}

.Modal {
  @include display-flex();
  @include flex-direction(column);
  height: 100%;
  background: $cThirdBackground;
  overflow: hidden;
}

.Modal-header {
  @include display-flex();
  @include justify-content(center);
  @include flex(0 0 auto);
  padding: $baseSize * 3 0;
  background: $cWhite;
}
.Modal-footer {
  @include display-flex();
  @include justify-content(center);
  @include flex(0 0 auto);
}
.Modal-container {
  @include display-flex();
  @include justify-content(center);
  @include flex(1 1 auto);
  overflow: scroll;
}
.Modal-inner,
.Modal-headerContainer,
.Modal-footerContainer {
  @include flex(0 0 auto);
  width: 940px;
}

.Modal-footerContainer {
  padding: 24px 0;
  border-top: 1px solid $cSecondaryLine;
}


